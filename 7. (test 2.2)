using NUnit.Framework;

[TestFixture]
public class FactorialTests
{
    [Test]
    public void FactorialIterative_CorrectForSmallNumbers()
    {
        Assert.AreEqual(1, FactorialCalculator.FactorialIterative(0), "Factorial(0) should be 1");
        Assert.AreEqual(1, FactorialCalculator.FactorialIterative(1), "Factorial(1) should be 1");
        Assert.AreEqual(2, FactorialCalculator.FactorialIterative(2), "Factorial(2) should be 2");
        Assert.AreEqual(120, FactorialCalculator.FactorialIterative(5), "Factorial(5) should be 120");
    }

    [Test]
    public void FactorialRecursive_CorrectForSmallNumbers()
    {
        Assert.AreEqual(1, FactorialCalculator.FactorialRecursive(0), "Factorial(0) should be 1");
        Assert.AreEqual(1, FactorialCalculator.FactorialRecursive(1), "Factorial(1) should be 1");
        Assert.AreEqual(2, FactorialCalculator.FactorialRecursive(2), "Factorial(2) should be 2");
        Assert.AreEqual(120, FactorialCalculator.FactorialRecursive(5), "Factorial(5) should be 120");
    }

    [Test]
    public void FactorialIterative_And_Recursive_ProduceSameResults()
    {
        for (int n = 0; n <= 10; n++)
        {
            long iterative = FactorialCalculator.FactorialIterative(n);
            long recursive = FactorialCalculator.FactorialRecursive(n);
            Assert.AreEqual(iterative, recursive, $"Results differ for n={n}");
        }
    }
}
